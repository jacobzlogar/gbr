pub mod arithmetic_16bit;
pub mod arithmetic_8bit;
pub mod bitflag;
pub mod bitshift;
pub mod bitwise;
pub mod carry;
pub mod interrupts;
pub mod jumps;
pub mod load;
pub mod misc;
pub mod stack;

use crate::{
    InstructionFn, Mnemonic,
    cpu::{Condition, R8, R16},
    errors::DecodeError,
    get_i8, get_u8, get_u16,
};
use arithmetic_8bit::*;
use arithmetic_16bit::*;
use bitflag::*;
use bitshift::*;
use bitwise::*;
use carry::*;
use interrupts::*;
use jumps::*;
use load::*;
use misc::*;
use stack::*;

#[allow(dead_code)]
#[derive(Debug)]
pub struct Instruction {
    pub mnemonic: Mnemonic,
    pub bytes: u8,
    pub cycles: u8,
}

pub type InstructionResult<T> = std::result::Result<T, DecodeError>;

/// Game Boy CPU (SM83) instruction set
/// https://gbdev.io/gb-opcodes/optables/#standard
pub const INSTRUCTION_SET: [InstructionFn; 256] = [
    // row 1
    |_| nop(),
    |ctx| ld_r16_n16(R16::BC, get_u16(&mut ctx.iter)?, ctx.cpu),
    |ctx| ld_immed_r16_a(R16::BC, ctx.cpu, ctx.memory),
    |ctx| inc_r16(R16::BC, ctx.cpu),
    |ctx| inc_r8(R8::B, ctx.cpu),
    |ctx| dec_r8(R8::B, ctx.cpu),
    |ctx| ld_r8_n8(R8::B, get_u8(&mut ctx.iter)?, ctx.cpu),
    |ctx| rlca(ctx.cpu),
    |ctx| load_a16_sp(get_u16(&mut ctx.iter)?, ctx.cpu, ctx.memory),
    |ctx| add_r16_hl(R16::BC, ctx.cpu),
    |ctx| ld_immed_r16_a(R16::BC, ctx.cpu, ctx.memory),
    |ctx| dec_r16(R16::BC, ctx.cpu),
    |ctx| inc_r8(R8::C, ctx.cpu),
    |ctx| dec_r8(R8::C, ctx.cpu),
    |ctx| ld_r8_n8(R8::C, get_u8(&mut ctx.iter)?, ctx.cpu),
    |ctx| rrca(ctx.cpu),
    // row 2
    |ctx| stop(ctx.memory),
    |ctx| ld_r16_n16(R16::DE, get_u16(&mut ctx.iter)?, ctx.cpu),
    |ctx| ld_immed_r16_a(R16::DE, ctx.cpu, ctx.memory),
    |ctx| inc_r16(R16::DE, ctx.cpu),
    |ctx| inc_r8(R8::D, ctx.cpu),
    |ctx| dec_r8(R8::D, ctx.cpu),
    |ctx| ld_r8_n8(R8::D, get_u8(&mut ctx.iter)?, ctx.cpu),
    |ctx| rla(ctx.cpu),
    |ctx| jr_n16(get_u8(&mut ctx.iter)?, ctx.cpu),
    |ctx| add_r16_hl(R16::DE, ctx.cpu),
    |ctx| ld_immed_r16_a(R16::DE, ctx.cpu, ctx.memory),
    |ctx| dec_r16(R16::DE, ctx.cpu),
    |ctx| inc_r8(R8::E, ctx.cpu),
    |ctx| dec_r8(R8::E, ctx.cpu),
    |ctx| ld_r8_n8(R8::E, get_u8(&mut ctx.iter)?, ctx.cpu),
    |ctx| rra(ctx.cpu),
    // row 3
    |ctx| jr_cc_n16(get_u8(&mut ctx.iter)?, Condition::NotZero, ctx.cpu),
    |ctx| ld_r16_n16(R16::HL, get_u16(&mut ctx.iter)?, ctx.cpu),
    |ctx| ld_hli_a(ctx.cpu, ctx.memory),
    |ctx| inc_r16(R16::HL, ctx.cpu),
    |ctx| inc_r8(R8::H, ctx.cpu),
    |ctx| dec_r8(R8::H, ctx.cpu),
    |ctx| ld_r8_n8(R8::H, get_u8(&mut ctx.iter)?, ctx.cpu),
    |ctx| daa(ctx.cpu),
    |ctx| jr_cc_n16(get_u8(&mut ctx.iter)?, Condition::Zero, ctx.cpu),
    |ctx| add_r16_hl(R16::HL, ctx.cpu),
    |ctx| ld_a_hli(ctx.cpu, ctx.memory),
    |ctx| dec_r16(R16::DE, ctx.cpu),
    |ctx| inc_r8(R8::E, ctx.cpu),
    |ctx| dec_r8(R8::E, ctx.cpu),
    |ctx| ld_r8_n8(R8::E, get_u8(&mut ctx.iter)?, ctx.cpu),
    |ctx| cpl(ctx.cpu),
    // row 4
    |ctx| jr_cc_n16(get_u8(&mut ctx.iter)?, Condition::NotCarry, ctx.cpu),
    |ctx| load_sp_n16(get_u16(&mut ctx.iter)?, ctx.cpu),
    |ctx| ld_hld_a(ctx.cpu, ctx.memory),
    |ctx| inc_sp(ctx.cpu),
    |ctx| inc_hl(ctx.cpu, ctx.memory),
    |ctx| dec_hl(ctx.cpu, ctx.memory),
    |ctx| ld_n8_hl(get_u8(&mut ctx.iter)?, ctx.cpu, ctx.memory),
    |ctx| scf(ctx.cpu),
    |ctx| jr_cc_n16(get_u8(&mut ctx.iter)?, Condition::Carry, ctx.cpu),
    |ctx| add_hl_sp(ctx.cpu),
    |ctx| ld_hld_a(ctx.cpu, ctx.memory),
    |ctx| dec_sp(ctx.cpu),
    |ctx| inc_r8(R8::A, ctx.cpu),
    |ctx| dec_r8(R8::A, ctx.cpu),
    |ctx| ld_r8_n8(R8::A, get_u8(&mut ctx.iter)?, ctx.cpu),
    |ctx| ccf(ctx.cpu),
    // row 5
    |ctx| ld_r8_r8(R8::B, R8::B, ctx.cpu),
    |ctx| ld_r8_r8(R8::C, R8::B, ctx.cpu),
    |ctx| ld_r8_r8(R8::D, R8::B, ctx.cpu),
    |ctx| ld_r8_r8(R8::E, R8::B, ctx.cpu),
    |ctx| ld_r8_r8(R8::H, R8::B, ctx.cpu),
    |ctx| ld_r8_r8(R8::L, R8::B, ctx.cpu),
    |ctx| ld_hl_r8(R8::B, ctx.cpu, ctx.memory),
    |ctx| ld_r8_r8(R8::A, R8::B, ctx.cpu),
    |ctx| ld_r8_r8(R8::B, R8::C, ctx.cpu),
    |ctx| ld_r8_r8(R8::C, R8::C, ctx.cpu),
    |ctx| ld_r8_r8(R8::D, R8::C, ctx.cpu),
    |ctx| ld_r8_r8(R8::E, R8::C, ctx.cpu),
    |ctx| ld_r8_r8(R8::H, R8::C, ctx.cpu),
    |ctx| ld_r8_r8(R8::L, R8::C, ctx.cpu),
    |ctx| ld_hl_r8(R8::C, ctx.cpu, ctx.memory),
    |ctx| ld_r8_r8(R8::A, R8::C, ctx.cpu),
    // row 6
    |ctx| ld_r8_r8(R8::B, R8::D, ctx.cpu),
    |ctx| ld_r8_r8(R8::C, R8::D, ctx.cpu),
    |ctx| ld_r8_r8(R8::D, R8::D, ctx.cpu),
    |ctx| ld_r8_r8(R8::E, R8::D, ctx.cpu),
    |ctx| ld_r8_r8(R8::H, R8::D, ctx.cpu),
    |ctx| ld_r8_r8(R8::L, R8::D, ctx.cpu),
    |ctx| ld_hl_r8(R8::D, ctx.cpu, ctx.memory),
    |ctx| ld_r8_r8(R8::A, R8::D, ctx.cpu),
    |ctx| ld_r8_r8(R8::B, R8::E, ctx.cpu),
    |ctx| ld_r8_r8(R8::C, R8::E, ctx.cpu),
    |ctx| ld_r8_r8(R8::D, R8::E, ctx.cpu),
    |ctx| ld_r8_r8(R8::E, R8::E, ctx.cpu),
    |ctx| ld_r8_r8(R8::H, R8::E, ctx.cpu),
    |ctx| ld_r8_r8(R8::L, R8::E, ctx.cpu),
    |ctx| ld_hl_r8(R8::E, ctx.cpu, ctx.memory),
    |ctx| ld_r8_r8(R8::A, R8::E, ctx.cpu),
    // row 7
    |ctx| ld_r8_r8(R8::B, R8::H, ctx.cpu),
    |ctx| ld_r8_r8(R8::C, R8::H, ctx.cpu),
    |ctx| ld_r8_r8(R8::D, R8::H, ctx.cpu),
    |ctx| ld_r8_r8(R8::E, R8::H, ctx.cpu),
    |ctx| ld_r8_r8(R8::H, R8::H, ctx.cpu),
    |ctx| ld_r8_r8(R8::L, R8::H, ctx.cpu),
    |ctx| ld_hl_r8(R8::H, ctx.cpu, ctx.memory),
    |ctx| ld_r8_r8(R8::A, R8::H, ctx.cpu),
    |ctx| ld_r8_r8(R8::B, R8::L, ctx.cpu),
    |ctx| ld_r8_r8(R8::C, R8::L, ctx.cpu),
    |ctx| ld_r8_r8(R8::D, R8::L, ctx.cpu),
    |ctx| ld_r8_r8(R8::E, R8::L, ctx.cpu),
    |ctx| ld_r8_r8(R8::H, R8::L, ctx.cpu),
    |ctx| ld_r8_r8(R8::L, R8::L, ctx.cpu),
    |ctx| ld_hl_r8(R8::L, ctx.cpu, ctx.memory),
    |ctx| ld_r8_r8(R8::A, R8::L, ctx.cpu),
    // row 8
    |ctx| ld_r8_hl(R8::B, ctx.cpu, ctx.memory),
    |ctx| ld_r8_hl(R8::C, ctx.cpu, ctx.memory),
    |ctx| ld_r8_hl(R8::D, ctx.cpu, ctx.memory),
    |ctx| ld_r8_hl(R8::E, ctx.cpu, ctx.memory),
    |ctx| ld_r8_hl(R8::H, ctx.cpu, ctx.memory),
    |ctx| ld_r8_hl(R8::L, ctx.cpu, ctx.memory),
    |ctx| halt(ctx.cpu),
    |ctx| ld_r8_hl(R8::A, ctx.cpu, ctx.memory),
    |ctx| ld_r8_r8(R8::B, R8::A, ctx.cpu),
    |ctx| ld_r8_r8(R8::C, R8::A, ctx.cpu),
    |ctx| ld_r8_r8(R8::D, R8::A, ctx.cpu),
    |ctx| ld_r8_r8(R8::E, R8::A, ctx.cpu),
    |ctx| ld_r8_r8(R8::H, R8::A, ctx.cpu),
    |ctx| ld_r8_r8(R8::L, R8::A, ctx.cpu),
    |ctx| ld_hl_r8(R8::A, ctx.cpu, ctx.memory),
    |ctx| ld_r8_r8(R8::A, R8::A, ctx.cpu),
    // row 9
    |ctx| add_a_r8(R8::B, ctx.cpu),
    |ctx| add_a_r8(R8::C, ctx.cpu),
    |ctx| add_a_r8(R8::D, ctx.cpu),
    |ctx| add_a_r8(R8::E, ctx.cpu),
    |ctx| add_a_r8(R8::H, ctx.cpu),
    |ctx| add_a_r8(R8::L, ctx.cpu),
    |ctx| add_a_immed_hl(ctx.cpu, ctx.memory),
    |ctx| add_a_r8(R8::A, ctx.cpu),
    |ctx| adc_a_r8(R8::B, ctx.cpu),
    |ctx| adc_a_r8(R8::C, ctx.cpu),
    |ctx| adc_a_r8(R8::D, ctx.cpu),
    |ctx| adc_a_r8(R8::E, ctx.cpu),
    |ctx| adc_a_r8(R8::H, ctx.cpu),
    |ctx| adc_a_r8(R8::L, ctx.cpu),
    |ctx| adc_a_immed_hl(ctx.cpu, ctx.memory),
    |ctx| adc_a_r8(R8::A, ctx.cpu),
    // row 10
    |ctx| sub_a_r8(R8::B, ctx.cpu),
    |ctx| sub_a_r8(R8::C, ctx.cpu),
    |ctx| sub_a_r8(R8::D, ctx.cpu),
    |ctx| sub_a_r8(R8::E, ctx.cpu),
    |ctx| sub_a_r8(R8::H, ctx.cpu),
    |ctx| sub_a_r8(R8::L, ctx.cpu),
    |ctx| sub_a_immed_hl(ctx.cpu, ctx.memory),
    |ctx| sub_a_r8(R8::A, ctx.cpu),
    |ctx| sbc_a_r8(R8::B, ctx.cpu),
    |ctx| sbc_a_r8(R8::C, ctx.cpu),
    |ctx| sbc_a_r8(R8::D, ctx.cpu),
    |ctx| sbc_a_r8(R8::E, ctx.cpu),
    |ctx| sbc_a_r8(R8::H, ctx.cpu),
    |ctx| sbc_a_r8(R8::L, ctx.cpu),
    |ctx| sbc_a_immed_hl(ctx.cpu, ctx.memory),
    |ctx| sbc_a_r8(R8::A, ctx.cpu),
    // row 11
    |ctx| and_a_r8(R8::B, ctx.cpu),
    |ctx| and_a_r8(R8::C, ctx.cpu),
    |ctx| and_a_r8(R8::D, ctx.cpu),
    |ctx| and_a_r8(R8::E, ctx.cpu),
    |ctx| and_a_r8(R8::H, ctx.cpu),
    |ctx| and_a_r8(R8::L, ctx.cpu),
    |ctx| and_a_immed_hl(ctx.cpu, ctx.memory),
    |ctx| and_a_r8(R8::A, ctx.cpu),
    |ctx| xor_a_r8(R8::B, ctx.cpu),
    |ctx| xor_a_r8(R8::C, ctx.cpu),
    |ctx| xor_a_r8(R8::D, ctx.cpu),
    |ctx| xor_a_r8(R8::E, ctx.cpu),
    |ctx| xor_a_r8(R8::H, ctx.cpu),
    |ctx| xor_a_r8(R8::L, ctx.cpu),
    |ctx| xor_a_immed_hl(ctx.cpu, ctx.memory),
    |ctx| xor_a_r8(R8::A, ctx.cpu),
    // row 12
    |ctx| or_a_r8(R8::B, ctx.cpu),
    |ctx| or_a_r8(R8::C, ctx.cpu),
    |ctx| or_a_r8(R8::D, ctx.cpu),
    |ctx| or_a_r8(R8::E, ctx.cpu),
    |ctx| or_a_r8(R8::H, ctx.cpu),
    |ctx| or_a_r8(R8::L, ctx.cpu),
    |ctx| or_a_hl(ctx.cpu, ctx.memory),
    |ctx| or_a_r8(R8::A, ctx.cpu),
    |ctx| cp_a_r8(R8::B, ctx.cpu),
    |ctx| cp_a_r8(R8::C, ctx.cpu),
    |ctx| cp_a_r8(R8::D, ctx.cpu),
    |ctx| cp_a_r8(R8::E, ctx.cpu),
    |ctx| cp_a_r8(R8::H, ctx.cpu),
    |ctx| cp_a_r8(R8::L, ctx.cpu),
    |ctx| cp_a_hl(ctx.cpu, ctx.memory),
    |ctx| cp_a_r8(R8::A, ctx.cpu),
    // row 13
    |ctx| ret_cc(Condition::NotZero, ctx.cpu, ctx.memory),
    |ctx| pop_r16(R16::BC, ctx.cpu, ctx.memory),
    |ctx| jp_cc_n16(get_u16(&mut ctx.iter)?, Condition::NotZero, ctx.cpu),
    |ctx| jp_n16(get_u16(&mut ctx.iter)?, ctx.cpu),
    |ctx| {
        call_cc_n16(
            get_u16(&mut ctx.iter)?,
            Condition::NotZero,
            ctx.cpu,
            ctx.memory,
        )
    },
    |ctx| push_r16(R16::BC, ctx.cpu, ctx.memory),
    |ctx| add_a_n8(get_u8(&mut ctx.iter)?, ctx.cpu),
    |ctx| rst(0x00, ctx.cpu, ctx.memory), // TODO: fix this
    |ctx| ret_cc(Condition::Zero, ctx.cpu, ctx.memory),
    |ctx| ret(ctx.cpu, ctx.memory),
    |ctx| jp_cc_n16(get_u16(&mut ctx.iter)?, Condition::Zero, ctx.cpu),
    |ctx| PREFIX_TABLE[*ctx.iter.next().unwrap() as usize](ctx),
    |ctx| {
        call_cc_n16(
            get_u16(&mut ctx.iter)?,
            Condition::Zero,
            ctx.cpu,
            ctx.memory,
        )
    },
    |ctx| call_n16(get_u16(&mut ctx.iter)?, ctx.cpu, ctx.memory),
    |ctx| adc_a_n8(get_u8(&mut ctx.iter)?, ctx.cpu),
    |ctx| rst(0x08, ctx.cpu, ctx.memory),
    // row 14
    |ctx| ret_cc(Condition::NotCarry, ctx.cpu, ctx.memory),
    |ctx| pop_r16(R16::DE, ctx.cpu, ctx.memory),
    |ctx| jp_cc_n16(get_u16(&mut ctx.iter)?, Condition::NotCarry, ctx.cpu),
    |_| Err(DecodeError::InvalidOpcodeByte(0xd3)),
    |ctx| {
        call_cc_n16(
            get_u16(&mut ctx.iter)?,
            Condition::NotCarry,
            ctx.cpu,
            ctx.memory,
        )
    },
    |ctx| push_r16(R16::DE, ctx.cpu, ctx.memory),
    |ctx| sub_a_n8(get_u8(&mut ctx.iter)?, ctx.cpu),
    |ctx| rst(0x10, ctx.cpu, ctx.memory),
    |ctx| ret_cc(Condition::Carry, ctx.cpu, ctx.memory),
    |ctx| reti(ctx.cpu, ctx.memory),
    |ctx| jp_cc_n16(get_u16(&mut ctx.iter)?, Condition::Carry, ctx.cpu),
    |_| Err(DecodeError::InvalidOpcodeByte(0xdb)),
    |ctx| {
        call_cc_n16(
            get_u16(&mut ctx.iter)?,
            Condition::Carry,
            ctx.cpu,
            ctx.memory,
        )
    },
    |_| Err(DecodeError::InvalidOpcodeByte(0xdd)),
    |ctx| sbc_a_n8(get_u8(&mut ctx.iter)?, ctx.cpu),
    |ctx| rst(0x18, ctx.cpu, ctx.memory),
    // row 15
    |ctx| ldh_a_immed_n16(get_u16(&mut ctx.iter)?, ctx.cpu, ctx.memory),
    |ctx| pop_r16(R16::DE, ctx.cpu, ctx.memory),
    |ctx| ldh_a_c(ctx.cpu, ctx.memory),
    |_| Err(DecodeError::InvalidOpcodeByte(0xe3)),
    |_| Err(DecodeError::InvalidOpcodeByte(0xe4)),
    |ctx| push_r16(R16::HL, ctx.cpu, ctx.memory),
    |ctx| and_a_n8(get_u8(&mut ctx.iter)?, ctx.cpu),
    |ctx| rst(0x20, ctx.cpu, ctx.memory), // TODO: fix this
    |ctx| add_sp_e8(get_u8(&mut ctx.iter)?, ctx.cpu),
    |ctx| jp_hl(ctx.cpu),
    |ctx| ld_a_immed_n16(get_u16(&mut ctx.iter)?, ctx.cpu, ctx.memory),
    |_| Err(DecodeError::InvalidOpcodeByte(0xeb)),
    |_| Err(DecodeError::InvalidOpcodeByte(0xec)),
    |_| Err(DecodeError::InvalidOpcodeByte(0xed)),
    |ctx| xor_a_n8(get_u8(&mut ctx.iter)?, ctx.cpu),
    |ctx| rst(0x28, ctx.cpu, ctx.memory),
    // row 16
    |ctx| ldh_immed_n16_a(get_u16(&mut ctx.iter)?, ctx.cpu, ctx.memory),
    |ctx| pop_af(ctx.cpu, ctx.memory),
    |ctx| ldh_c_a(ctx.cpu, ctx.memory),
    |ctx| di(ctx.cpu),
    |_| Err(DecodeError::InvalidOpcodeByte(0xf4)),
    |ctx| push_af(ctx.cpu, ctx.memory),
    |ctx| or_a_n8(get_u8(&mut ctx.iter)?, ctx.cpu),
    |ctx| rst(0x30, ctx.cpu, ctx.memory), // TODO: fix this
    |ctx| load_hl_sp_e8(get_i8(&mut ctx.iter)?, ctx.cpu),
    |ctx| load_sp_hl(ctx.cpu),
    |ctx| ld_immed_n16_a(get_u16(&mut ctx.iter)?, ctx.cpu, ctx.memory),
    |_| ei(),
    |_| Err(DecodeError::InvalidOpcodeByte(0xfc)),
    |_| Err(DecodeError::InvalidOpcodeByte(0xfd)),
    |ctx| cp_a_n8(get_u8(&mut ctx.iter)?, ctx.cpu),
    |ctx| rst(0x38, ctx.cpu, ctx.memory),
];

/// Prefixed ($CB $xx)
/// https://gbdev.io/gb-opcodes/optables/#prefixed
pub const PREFIX_TABLE: [InstructionFn; 256] = [
    // row 1
    |ctx| rlc_r8(R8::B, ctx.cpu),
    |ctx| rlc_r8(R8::C, ctx.cpu),
    |ctx| rlc_r8(R8::D, ctx.cpu),
    |ctx| rlc_r8(R8::E, ctx.cpu),
    |ctx| rlc_r8(R8::H, ctx.cpu),
    |ctx| rlc_r8(R8::L, ctx.cpu),
    |ctx| rlc_hl(ctx.cpu, ctx.memory),
    |ctx| rlc_r8(R8::A, ctx.cpu),
    |ctx| rrc_r8(R8::B, ctx.cpu),
    |ctx| rrc_r8(R8::C, ctx.cpu),
    |ctx| rrc_r8(R8::D, ctx.cpu),
    |ctx| rrc_r8(R8::E, ctx.cpu),
    |ctx| rrc_r8(R8::H, ctx.cpu),
    |ctx| rrc_r8(R8::L, ctx.cpu),
    |ctx| rrc_hl(ctx.cpu, ctx.memory),
    |ctx| rrc_r8(R8::A, ctx.cpu),
    // row 2
    |ctx| rl_r8(R8::B, ctx.cpu),
    |ctx| rl_r8(R8::C, ctx.cpu),
    |ctx| rl_r8(R8::D, ctx.cpu),
    |ctx| rl_r8(R8::E, ctx.cpu),
    |ctx| rl_r8(R8::H, ctx.cpu),
    |ctx| rl_r8(R8::L, ctx.cpu),
    |ctx| rl_hl(ctx.cpu, ctx.memory),
    |ctx| rl_r8(R8::A, ctx.cpu),
    |ctx| rr_r8(R8::B, ctx.cpu),
    |ctx| rr_r8(R8::C, ctx.cpu),
    |ctx| rr_r8(R8::D, ctx.cpu),
    |ctx| rr_r8(R8::E, ctx.cpu),
    |ctx| rr_r8(R8::H, ctx.cpu),
    |ctx| rr_r8(R8::L, ctx.cpu),
    |ctx| rr_hl(ctx.cpu, ctx.memory),
    |ctx| rr_r8(R8::A, ctx.cpu),
    // row 3
    |ctx| sla_r8(R8::B, ctx.cpu),
    |ctx| sla_r8(R8::C, ctx.cpu),
    |ctx| sla_r8(R8::D, ctx.cpu),
    |ctx| sla_r8(R8::E, ctx.cpu),
    |ctx| sla_r8(R8::H, ctx.cpu),
    |ctx| sla_r8(R8::L, ctx.cpu),
    |ctx| sla_hl(ctx.cpu, ctx.memory),
    |ctx| sla_r8(R8::A, ctx.cpu),
    |ctx| sra_r8(R8::B, ctx.cpu),
    |ctx| sra_r8(R8::C, ctx.cpu),
    |ctx| sra_r8(R8::D, ctx.cpu),
    |ctx| sra_r8(R8::E, ctx.cpu),
    |ctx| sra_r8(R8::H, ctx.cpu),
    |ctx| sra_r8(R8::L, ctx.cpu),
    |ctx| sra_hl(ctx.cpu, ctx.memory),
    |ctx| sra_r8(R8::A, ctx.cpu),
    // row 4
    |ctx| swap_r8(R8::B, ctx.cpu),
    |ctx| swap_r8(R8::C, ctx.cpu),
    |ctx| swap_r8(R8::D, ctx.cpu),
    |ctx| swap_r8(R8::E, ctx.cpu),
    |ctx| swap_r8(R8::H, ctx.cpu),
    |ctx| swap_r8(R8::L, ctx.cpu),
    |ctx| swap_hl(ctx.cpu, ctx.memory),
    |ctx| swap_r8(R8::A, ctx.cpu),
    |ctx| srl_r8(R8::B, ctx.cpu),
    |ctx| srl_r8(R8::C, ctx.cpu),
    |ctx| srl_r8(R8::D, ctx.cpu),
    |ctx| srl_r8(R8::E, ctx.cpu),
    |ctx| srl_r8(R8::H, ctx.cpu),
    |ctx| srl_r8(R8::L, ctx.cpu),
    |ctx| srl_hl(ctx.cpu, ctx.memory),
    |ctx| srl_r8(R8::A, ctx.cpu),
    // row 5
    |ctx| bit_u3_r8(0, R8::B, ctx.cpu),
    |ctx| bit_u3_r8(0, R8::C, ctx.cpu),
    |ctx| bit_u3_r8(0, R8::D, ctx.cpu),
    |ctx| bit_u3_r8(0, R8::E, ctx.cpu),
    |ctx| bit_u3_r8(0, R8::H, ctx.cpu),
    |ctx| bit_u3_r8(0, R8::L, ctx.cpu),
    |ctx| bit_u3_hl(0, ctx.cpu, ctx.memory),
    |ctx| bit_u3_r8(0, R8::A, ctx.cpu),
    |ctx| bit_u3_r8(1, R8::B, ctx.cpu),
    |ctx| bit_u3_r8(1, R8::C, ctx.cpu),
    |ctx| bit_u3_r8(1, R8::D, ctx.cpu),
    |ctx| bit_u3_r8(1, R8::E, ctx.cpu),
    |ctx| bit_u3_r8(1, R8::H, ctx.cpu),
    |ctx| bit_u3_r8(1, R8::L, ctx.cpu),
    |ctx| bit_u3_hl(1, ctx.cpu, ctx.memory),
    |ctx| bit_u3_r8(1, R8::A, ctx.cpu),
    // row 6
    |ctx| bit_u3_r8(2, R8::B, ctx.cpu),
    |ctx| bit_u3_r8(2, R8::C, ctx.cpu),
    |ctx| bit_u3_r8(2, R8::D, ctx.cpu),
    |ctx| bit_u3_r8(2, R8::E, ctx.cpu),
    |ctx| bit_u3_r8(2, R8::H, ctx.cpu),
    |ctx| bit_u3_r8(2, R8::L, ctx.cpu),
    |ctx| bit_u3_hl(2, ctx.cpu, ctx.memory),
    |ctx| bit_u3_r8(2, R8::A, ctx.cpu),
    |ctx| bit_u3_r8(3, R8::B, ctx.cpu),
    |ctx| bit_u3_r8(3, R8::C, ctx.cpu),
    |ctx| bit_u3_r8(3, R8::D, ctx.cpu),
    |ctx| bit_u3_r8(3, R8::E, ctx.cpu),
    |ctx| bit_u3_r8(3, R8::H, ctx.cpu),
    |ctx| bit_u3_r8(3, R8::L, ctx.cpu),
    |ctx| bit_u3_hl(3, ctx.cpu, ctx.memory),
    |ctx| bit_u3_r8(3, R8::A, ctx.cpu),
    // row 7
    |ctx| bit_u3_r8(4, R8::B, ctx.cpu),
    |ctx| bit_u3_r8(4, R8::C, ctx.cpu),
    |ctx| bit_u3_r8(4, R8::D, ctx.cpu),
    |ctx| bit_u3_r8(4, R8::E, ctx.cpu),
    |ctx| bit_u3_r8(4, R8::H, ctx.cpu),
    |ctx| bit_u3_r8(4, R8::L, ctx.cpu),
    |ctx| bit_u3_hl(4, ctx.cpu, ctx.memory),
    |ctx| bit_u3_r8(4, R8::A, ctx.cpu),
    |ctx| bit_u3_r8(5, R8::B, ctx.cpu),
    |ctx| bit_u3_r8(5, R8::C, ctx.cpu),
    |ctx| bit_u3_r8(5, R8::D, ctx.cpu),
    |ctx| bit_u3_r8(5, R8::E, ctx.cpu),
    |ctx| bit_u3_r8(5, R8::H, ctx.cpu),
    |ctx| bit_u3_r8(5, R8::L, ctx.cpu),
    |ctx| bit_u3_hl(5, ctx.cpu, ctx.memory),
    |ctx| bit_u3_r8(5, R8::A, ctx.cpu),
    // row 8
    |ctx| bit_u3_r8(6, R8::B, ctx.cpu),
    |ctx| bit_u3_r8(6, R8::C, ctx.cpu),
    |ctx| bit_u3_r8(6, R8::D, ctx.cpu),
    |ctx| bit_u3_r8(6, R8::E, ctx.cpu),
    |ctx| bit_u3_r8(6, R8::H, ctx.cpu),
    |ctx| bit_u3_r8(6, R8::L, ctx.cpu),
    |ctx| bit_u3_hl(6, ctx.cpu, ctx.memory),
    |ctx| bit_u3_r8(6, R8::A, ctx.cpu),
    |ctx| bit_u3_r8(7, R8::B, ctx.cpu),
    |ctx| bit_u3_r8(7, R8::C, ctx.cpu),
    |ctx| bit_u3_r8(7, R8::D, ctx.cpu),
    |ctx| bit_u3_r8(7, R8::E, ctx.cpu),
    |ctx| bit_u3_r8(7, R8::H, ctx.cpu),
    |ctx| bit_u3_r8(7, R8::L, ctx.cpu),
    |ctx| bit_u3_hl(7, ctx.cpu, ctx.memory),
    |ctx| bit_u3_r8(7, R8::A, ctx.cpu),
    // row 9
    |ctx| res_u3_r8(0, R8::B, ctx.cpu),
    |ctx| res_u3_r8(0, R8::C, ctx.cpu),
    |ctx| res_u3_r8(0, R8::D, ctx.cpu),
    |ctx| res_u3_r8(0, R8::E, ctx.cpu),
    |ctx| res_u3_r8(0, R8::H, ctx.cpu),
    |ctx| res_u3_r8(0, R8::L, ctx.cpu),
    |ctx| res_u3_hl(0, ctx.cpu, ctx.memory),
    |ctx| res_u3_r8(0, R8::A, ctx.cpu),
    |ctx| res_u3_r8(1, R8::B, ctx.cpu),
    |ctx| res_u3_r8(1, R8::C, ctx.cpu),
    |ctx| res_u3_r8(1, R8::D, ctx.cpu),
    |ctx| res_u3_r8(1, R8::E, ctx.cpu),
    |ctx| res_u3_r8(1, R8::H, ctx.cpu),
    |ctx| res_u3_r8(1, R8::L, ctx.cpu),
    |ctx| res_u3_hl(1, ctx.cpu, ctx.memory),
    |ctx| res_u3_r8(1, R8::A, ctx.cpu),
    // row 10
    |ctx| res_u3_r8(2, R8::B, ctx.cpu),
    |ctx| res_u3_r8(2, R8::C, ctx.cpu),
    |ctx| res_u3_r8(2, R8::D, ctx.cpu),
    |ctx| res_u3_r8(2, R8::E, ctx.cpu),
    |ctx| res_u3_r8(2, R8::H, ctx.cpu),
    |ctx| res_u3_r8(2, R8::L, ctx.cpu),
    |ctx| res_u3_hl(2, ctx.cpu, ctx.memory),
    |ctx| res_u3_r8(2, R8::A, ctx.cpu),
    |ctx| res_u3_r8(3, R8::B, ctx.cpu),
    |ctx| res_u3_r8(3, R8::C, ctx.cpu),
    |ctx| res_u3_r8(3, R8::D, ctx.cpu),
    |ctx| res_u3_r8(3, R8::E, ctx.cpu),
    |ctx| res_u3_r8(3, R8::H, ctx.cpu),
    |ctx| res_u3_r8(3, R8::L, ctx.cpu),
    |ctx| res_u3_hl(3, ctx.cpu, ctx.memory),
    |ctx| res_u3_r8(3, R8::A, ctx.cpu),
    // row 11
    |ctx| res_u3_r8(4, R8::B, ctx.cpu),
    |ctx| res_u3_r8(4, R8::C, ctx.cpu),
    |ctx| res_u3_r8(4, R8::D, ctx.cpu),
    |ctx| res_u3_r8(4, R8::E, ctx.cpu),
    |ctx| res_u3_r8(4, R8::H, ctx.cpu),
    |ctx| res_u3_r8(4, R8::L, ctx.cpu),
    |ctx| res_u3_hl(4, ctx.cpu, ctx.memory),
    |ctx| res_u3_r8(4, R8::A, ctx.cpu),
    |ctx| res_u3_r8(5, R8::B, ctx.cpu),
    |ctx| res_u3_r8(5, R8::C, ctx.cpu),
    |ctx| res_u3_r8(5, R8::D, ctx.cpu),
    |ctx| res_u3_r8(5, R8::E, ctx.cpu),
    |ctx| res_u3_r8(5, R8::H, ctx.cpu),
    |ctx| res_u3_r8(5, R8::L, ctx.cpu),
    |ctx| res_u3_hl(5, ctx.cpu, ctx.memory),
    |ctx| res_u3_r8(5, R8::A, ctx.cpu),
    // row 12
    |ctx| res_u3_r8(6, R8::B, ctx.cpu),
    |ctx| res_u3_r8(6, R8::C, ctx.cpu),
    |ctx| res_u3_r8(6, R8::D, ctx.cpu),
    |ctx| res_u3_r8(6, R8::E, ctx.cpu),
    |ctx| res_u3_r8(6, R8::H, ctx.cpu),
    |ctx| res_u3_r8(6, R8::L, ctx.cpu),
    |ctx| res_u3_hl(6, ctx.cpu, ctx.memory),
    |ctx| res_u3_r8(6, R8::A, ctx.cpu),
    |ctx| res_u3_r8(7, R8::B, ctx.cpu),
    |ctx| res_u3_r8(7, R8::C, ctx.cpu),
    |ctx| res_u3_r8(7, R8::D, ctx.cpu),
    |ctx| res_u3_r8(7, R8::E, ctx.cpu),
    |ctx| res_u3_r8(7, R8::H, ctx.cpu),
    |ctx| res_u3_r8(7, R8::L, ctx.cpu),
    |ctx| res_u3_hl(7, ctx.cpu, ctx.memory),
    |ctx| res_u3_r8(7, R8::A, ctx.cpu),
    // row 13
    |ctx| set_u3_r8(0, R8::B, ctx.cpu),
    |ctx| set_u3_r8(0, R8::C, ctx.cpu),
    |ctx| set_u3_r8(0, R8::D, ctx.cpu),
    |ctx| set_u3_r8(0, R8::E, ctx.cpu),
    |ctx| set_u3_r8(0, R8::H, ctx.cpu),
    |ctx| set_u3_r8(0, R8::L, ctx.cpu),
    |ctx| set_u3_hl(0, ctx.cpu, ctx.memory),
    |ctx| set_u3_r8(0, R8::A, ctx.cpu),
    |ctx| set_u3_r8(1, R8::B, ctx.cpu),
    |ctx| set_u3_r8(1, R8::C, ctx.cpu),
    |ctx| set_u3_r8(1, R8::D, ctx.cpu),
    |ctx| set_u3_r8(1, R8::E, ctx.cpu),
    |ctx| set_u3_r8(1, R8::H, ctx.cpu),
    |ctx| set_u3_r8(1, R8::L, ctx.cpu),
    |ctx| set_u3_hl(1, ctx.cpu, ctx.memory),
    |ctx| set_u3_r8(1, R8::A, ctx.cpu),
    // row 14
    |ctx| set_u3_r8(2, R8::B, ctx.cpu),
    |ctx| set_u3_r8(2, R8::C, ctx.cpu),
    |ctx| set_u3_r8(2, R8::D, ctx.cpu),
    |ctx| set_u3_r8(2, R8::E, ctx.cpu),
    |ctx| set_u3_r8(2, R8::H, ctx.cpu),
    |ctx| set_u3_r8(2, R8::L, ctx.cpu),
    |ctx| set_u3_hl(2, ctx.cpu, ctx.memory),
    |ctx| set_u3_r8(2, R8::A, ctx.cpu),
    |ctx| set_u3_r8(3, R8::B, ctx.cpu),
    |ctx| set_u3_r8(3, R8::C, ctx.cpu),
    |ctx| set_u3_r8(3, R8::D, ctx.cpu),
    |ctx| set_u3_r8(3, R8::E, ctx.cpu),
    |ctx| set_u3_r8(3, R8::H, ctx.cpu),
    |ctx| set_u3_r8(3, R8::L, ctx.cpu),
    |ctx| set_u3_hl(3, ctx.cpu, ctx.memory),
    |ctx| set_u3_r8(3, R8::A, ctx.cpu),
    // row 15
    |ctx| set_u3_r8(4, R8::B, ctx.cpu),
    |ctx| set_u3_r8(4, R8::C, ctx.cpu),
    |ctx| set_u3_r8(4, R8::D, ctx.cpu),
    |ctx| set_u3_r8(4, R8::E, ctx.cpu),
    |ctx| set_u3_r8(4, R8::H, ctx.cpu),
    |ctx| set_u3_r8(4, R8::L, ctx.cpu),
    |ctx| set_u3_hl(4, ctx.cpu, ctx.memory),
    |ctx| set_u3_r8(4, R8::A, ctx.cpu),
    |ctx| set_u3_r8(5, R8::B, ctx.cpu),
    |ctx| set_u3_r8(5, R8::C, ctx.cpu),
    |ctx| set_u3_r8(5, R8::D, ctx.cpu),
    |ctx| set_u3_r8(5, R8::E, ctx.cpu),
    |ctx| set_u3_r8(5, R8::H, ctx.cpu),
    |ctx| set_u3_r8(5, R8::L, ctx.cpu),
    |ctx| set_u3_hl(5, ctx.cpu, ctx.memory),
    |ctx| set_u3_r8(5, R8::A, ctx.cpu),
    // row 16
    |ctx| set_u3_r8(6, R8::B, ctx.cpu),
    |ctx| set_u3_r8(6, R8::C, ctx.cpu),
    |ctx| set_u3_r8(6, R8::D, ctx.cpu),
    |ctx| set_u3_r8(6, R8::E, ctx.cpu),
    |ctx| set_u3_r8(6, R8::H, ctx.cpu),
    |ctx| set_u3_r8(6, R8::L, ctx.cpu),
    |ctx| set_u3_hl(6, ctx.cpu, ctx.memory),
    |ctx| set_u3_r8(6, R8::A, ctx.cpu),
    |ctx| set_u3_r8(7, R8::B, ctx.cpu),
    |ctx| set_u3_r8(7, R8::C, ctx.cpu),
    |ctx| set_u3_r8(7, R8::D, ctx.cpu),
    |ctx| set_u3_r8(7, R8::E, ctx.cpu),
    |ctx| set_u3_r8(7, R8::H, ctx.cpu),
    |ctx| set_u3_r8(7, R8::L, ctx.cpu),
    |ctx| set_u3_hl(7, ctx.cpu, ctx.memory),
    |ctx| set_u3_r8(7, R8::A, ctx.cpu),
];
