use arithmetic_8bit::{
    adc_a_immed_hl, adc_a_n8, adc_a_r8, add_a_immed_hl, add_a_n8, add_a_r8, dec_hl, dec_r8, inc_hl,
    inc_r8, sbc_a_immed_hl, sbc_a_r8, sub_a_immed_hl, sub_a_r8,
};
use arithmetic_8bit::{cp_a_hl, cp_a_n8, cp_a_r8, sbc_a_n8, sub_a_n8};
use arithmetic_16bit::{add_r16_hl, dec_r16, inc_r16};
use bitflag::{bit_u3_hl, bit_u3_r8, res_u3_hl, res_u3_r8, set_u3_hl, set_u3_r8};
use bitshift::{
    rl_hl, rl_r8, rla, rlc_hl, rlc_r8, rlca, rr_hl, rr_r8, rra, rrc_hl, rrc_r8, rrca, sla_hl,
    sla_r8, sra_hl, sra_r8, srl_hl, srl_r8, swap_hl, swap_r8,
};
use bitwise::{
    and_a_immed_hl, and_a_n8, and_a_r8, cpl, or_a_hl, or_a_n8, or_a_r8, xor_a_immed_hl, xor_a_n8,
    xor_a_r8,
};
use carry::{ccf, scf};
use interrupts::{di, ei, halt};
use jumps::{
    call_cc_n16, call_n16, jp_cc_n16, jp_hl, jp_n16, jr_cc_n16, jr_n16, ret, ret_cc, reti, rst,
};
use load::{
    load_a_hli, load_a_immed_n16, load_hl_r8, load_hld_a, load_hli_a, load_immed_n16_a, load_immed_r16_a, load_n8_hl, load_r16_n16, load_r8_hl, load_r8_n8, load_r8_r8, loadh_a_c, loadh_a_immed_n16, loadh_c_a, loadh_immed_n16_a
};
use misc::{daa, nop, stop};
use stack::{
    add_hl_sp, add_sp_e8, dec_sp, inc_sp, load_a16_sp, load_hl_sp_e8, load_sp_hl, load_sp_n16,
    pop_af, pop_r16, push_af, push_r16,
};

use crate::{
    InstructionFn, Mnemonic,
    cpu::{Register8, Register16},
    errors::DecodeError,
};

pub mod arithmetic_16bit;
pub mod arithmetic_8bit;
pub mod bitflag;
pub mod bitshift;
pub mod bitwise;
pub mod carry;
pub mod interrupts;
pub mod jumps;
pub mod load;
pub mod misc;
pub mod stack;

#[derive(Debug)]
pub enum Condition {
    NotZero,
    NotCarry,
    Zero,
    Carry,
}

#[allow(dead_code)]
#[derive(Debug)]
pub struct Instruction {
    pub mnemonic: Mnemonic,
    pub bytes: u8,
    pub cycles: u8,
}

pub type InstructionResult<T> = std::result::Result<T, DecodeError>;

fn get_i8(iter: &mut std::slice::Iter<u8>) -> InstructionResult<i8> {
    let num = *iter.next().ok_or(DecodeError::MissingDataByte)?;
    Ok(num as i8)
}

fn get_u8(iter: &mut std::slice::Iter<u8>) -> InstructionResult<u8> {
    Ok(*iter.next().ok_or(DecodeError::MissingDataByte)?)
}

fn get_u16(iter: &mut std::slice::Iter<u8>) -> InstructionResult<u16> {
    let n16 = u16::from_le_bytes([
        *iter.next().ok_or(DecodeError::MissingDataByte)?,
        *iter.next().ok_or(DecodeError::MissingDataByte)?,
    ]);
    Ok(n16)
}

/// Game Boy CPU (SM83) instruction set
/// https://gbdev.io/gb-opcodes/optables/#standard
pub const INSTRUCTION_SET: [InstructionFn; 256] = [
    // row 1
    |_| nop(),
    |ctx| load_r16_n16(Register16::BC, get_u16(ctx.iter)?, ctx.cpu),
    |ctx| load_immed_r16_a(Register16::BC, ctx.cpu, ctx.memory),
    |ctx| inc_r16(Register16::BC, ctx.cpu),
    |ctx| inc_r8(Register8::B, ctx.cpu),
    |ctx| dec_r8(Register8::B, ctx.cpu),
    |ctx| load_r8_n8(Register8::B, get_u8(ctx.iter)?, ctx.cpu),
    |ctx| rlca(ctx.cpu),
    |ctx| load_a16_sp(get_u16(ctx.iter)?, ctx.cpu, ctx.memory),
    |ctx| add_r16_hl(Register16::BC, ctx.cpu),
    |ctx| load_immed_r16_a(Register16::BC, ctx.cpu, ctx.memory),
    |ctx| dec_r16(Register16::BC, ctx.cpu),
    |ctx| inc_r8(Register8::C, ctx.cpu),
    |ctx| dec_r8(Register8::C, ctx.cpu),
    |ctx| load_r8_n8(Register8::C, get_u8(ctx.iter)?, ctx.cpu),
    |ctx| rrca(ctx.cpu),
    // row 2
    |ctx| stop(ctx.memory),
    |ctx| load_r16_n16(Register16::DE, get_u16(ctx.iter)?, ctx.cpu),
    |ctx| load_immed_r16_a(Register16::DE, ctx.cpu, ctx.memory),
    |ctx| inc_r16(Register16::DE, ctx.cpu),
    |ctx| inc_r8(Register8::D, ctx.cpu),
    |ctx| dec_r8(Register8::D, ctx.cpu),
    |ctx| load_r8_n8(Register8::D, get_u8(ctx.iter)?, ctx.cpu),
    |ctx| rla(ctx.cpu),
    |ctx| jr_n16(get_u16(ctx.iter)?, ctx.cpu),
    |ctx| add_r16_hl(Register16::DE, ctx.cpu),
    |ctx| load_immed_r16_a(Register16::DE, ctx.cpu, ctx.memory),
    |ctx| dec_r16(Register16::DE, ctx.cpu),
    |ctx| inc_r8(Register8::E, ctx.cpu),
    |ctx| dec_r8(Register8::E, ctx.cpu),
    |ctx| load_r8_n8(Register8::E, get_u8(ctx.iter)?, ctx.cpu),
    |ctx| rra(ctx.cpu),
    // row 3
    |ctx| jr_cc_n16(get_u16(ctx.iter)?, Condition::NotZero, ctx.cpu),
    |ctx| load_r16_n16(Register16::DE, get_u16(ctx.iter)?, ctx.cpu),
    |ctx| load_hli_a(ctx.cpu, ctx.memory),
    |ctx| inc_r16(Register16::HL, ctx.cpu),
    |ctx| inc_r8(Register8::H, ctx.cpu),
    |ctx| dec_r8(Register8::H, ctx.cpu),
    |ctx| load_r8_n8(Register8::H, get_u8(ctx.iter)?, ctx.cpu),
    |ctx| daa(ctx.cpu),
    |ctx| jr_cc_n16(get_u16(ctx.iter)?, Condition::Zero, ctx.cpu),
    |ctx| add_r16_hl(Register16::HL, ctx.cpu),
    |ctx| load_a_hli(ctx.cpu, ctx.memory),
    |ctx| dec_r16(Register16::DE, ctx.cpu),
    |ctx| inc_r8(Register8::E, ctx.cpu),
    |ctx| dec_r8(Register8::E, ctx.cpu),
    |ctx| load_r8_n8(Register8::E, get_u8(ctx.iter)?, ctx.cpu),
    |ctx| cpl(ctx.cpu),
    // row 4
    |ctx| jr_cc_n16(get_u16(ctx.iter)?, Condition::NotCarry, ctx.cpu),
    |ctx| load_sp_n16(get_u16(ctx.iter)?, ctx.cpu),
    |ctx| load_hld_a(ctx.cpu, ctx.memory),
    |ctx| inc_sp(ctx.cpu),
    |ctx| inc_hl(ctx.cpu, ctx.memory),
    |ctx| dec_hl(ctx.cpu, ctx.memory),
    |ctx| load_n8_hl(get_u8(ctx.iter)?, ctx.cpu, ctx.memory),
    |ctx| scf(ctx.cpu),
    |ctx| jr_cc_n16(get_u16(ctx.iter)?, Condition::Carry, ctx.cpu),
    |ctx| add_hl_sp(ctx.cpu),
    |ctx| load_hld_a(ctx.cpu, ctx.memory),
    |ctx| dec_sp(ctx.cpu),
    |ctx| inc_r8(Register8::A, ctx.cpu),
    |ctx| dec_r8(Register8::A, ctx.cpu),
    |ctx| load_r8_n8(Register8::A, get_u8(ctx.iter)?, ctx.cpu),
    |ctx| ccf(ctx.cpu),
    // row 5
    |ctx| load_r8_r8(Register8::B, Register8::B, ctx.cpu),
    |ctx| load_r8_r8(Register8::C, Register8::B, ctx.cpu),
    |ctx| load_r8_r8(Register8::D, Register8::B, ctx.cpu),
    |ctx| load_r8_r8(Register8::E, Register8::B, ctx.cpu),
    |ctx| load_r8_r8(Register8::H, Register8::B, ctx.cpu),
    |ctx| load_r8_r8(Register8::L, Register8::B, ctx.cpu),
    |ctx| load_hl_r8(Register8::B, ctx.cpu, ctx.memory),
    |ctx| load_r8_r8(Register8::A, Register8::B, ctx.cpu),
    |ctx| load_r8_r8(Register8::B, Register8::C, ctx.cpu),
    |ctx| load_r8_r8(Register8::C, Register8::C, ctx.cpu),
    |ctx| load_r8_r8(Register8::D, Register8::C, ctx.cpu),
    |ctx| load_r8_r8(Register8::E, Register8::C, ctx.cpu),
    |ctx| load_r8_r8(Register8::H, Register8::C, ctx.cpu),
    |ctx| load_r8_r8(Register8::L, Register8::C, ctx.cpu),
    |ctx| load_hl_r8(Register8::C, ctx.cpu, ctx.memory),
    |ctx| load_r8_r8(Register8::A, Register8::C, ctx.cpu),
    // row 6
    |ctx| load_r8_r8(Register8::B, Register8::D, ctx.cpu),
    |ctx| load_r8_r8(Register8::C, Register8::D, ctx.cpu),
    |ctx| load_r8_r8(Register8::D, Register8::D, ctx.cpu),
    |ctx| load_r8_r8(Register8::E, Register8::D, ctx.cpu),
    |ctx| load_r8_r8(Register8::H, Register8::D, ctx.cpu),
    |ctx| load_r8_r8(Register8::L, Register8::D, ctx.cpu),
    |ctx| load_hl_r8(Register8::D, ctx.cpu, ctx.memory),
    |ctx| load_r8_r8(Register8::A, Register8::D, ctx.cpu),
    |ctx| load_r8_r8(Register8::B, Register8::E, ctx.cpu),
    |ctx| load_r8_r8(Register8::C, Register8::E, ctx.cpu),
    |ctx| load_r8_r8(Register8::D, Register8::E, ctx.cpu),
    |ctx| load_r8_r8(Register8::E, Register8::E, ctx.cpu),
    |ctx| load_r8_r8(Register8::H, Register8::E, ctx.cpu),
    |ctx| load_r8_r8(Register8::L, Register8::E, ctx.cpu),
    |ctx| load_hl_r8(Register8::E, ctx.cpu, ctx.memory),
    |ctx| load_r8_r8(Register8::A, Register8::E, ctx.cpu),
    // row 7
    |ctx| load_r8_r8(Register8::B, Register8::H, ctx.cpu),
    |ctx| load_r8_r8(Register8::C, Register8::H, ctx.cpu),
    |ctx| load_r8_r8(Register8::D, Register8::H, ctx.cpu),
    |ctx| load_r8_r8(Register8::E, Register8::H, ctx.cpu),
    |ctx| load_r8_r8(Register8::H, Register8::H, ctx.cpu),
    |ctx| load_r8_r8(Register8::L, Register8::H, ctx.cpu),
    |ctx| load_hl_r8(Register8::H, ctx.cpu, ctx.memory),
    |ctx| load_r8_r8(Register8::A, Register8::H, ctx.cpu),
    |ctx| load_r8_r8(Register8::B, Register8::L, ctx.cpu),
    |ctx| load_r8_r8(Register8::C, Register8::L, ctx.cpu),
    |ctx| load_r8_r8(Register8::D, Register8::L, ctx.cpu),
    |ctx| load_r8_r8(Register8::E, Register8::L, ctx.cpu),
    |ctx| load_r8_r8(Register8::H, Register8::L, ctx.cpu),
    |ctx| load_r8_r8(Register8::L, Register8::L, ctx.cpu),
    |ctx| load_hl_r8(Register8::L, ctx.cpu, ctx.memory),
    |ctx| load_r8_r8(Register8::A, Register8::L, ctx.cpu),
    // row 8
    |ctx| load_r8_hl(Register8::B, ctx.cpu, ctx.memory),
    |ctx| load_r8_hl(Register8::C, ctx.cpu, ctx.memory),
    |ctx| load_r8_hl(Register8::D, ctx.cpu, ctx.memory),
    |ctx| load_r8_hl(Register8::E, ctx.cpu, ctx.memory),
    |ctx| load_r8_hl(Register8::H, ctx.cpu, ctx.memory),
    |ctx| load_r8_hl(Register8::L, ctx.cpu, ctx.memory),
    |ctx| halt(ctx.cpu),
    |ctx| load_r8_hl(Register8::A, ctx.cpu, ctx.memory),
    |ctx| load_r8_r8(Register8::B, Register8::A, ctx.cpu),
    |ctx| load_r8_r8(Register8::C, Register8::A, ctx.cpu),
    |ctx| load_r8_r8(Register8::D, Register8::A, ctx.cpu),
    |ctx| load_r8_r8(Register8::E, Register8::A, ctx.cpu),
    |ctx| load_r8_r8(Register8::H, Register8::A, ctx.cpu),
    |ctx| load_r8_r8(Register8::L, Register8::A, ctx.cpu),
    |ctx| load_hl_r8(Register8::A, ctx.cpu, ctx.memory),
    |ctx| load_r8_r8(Register8::A, Register8::A, ctx.cpu),
    // row 9
    |ctx| add_a_r8(Register8::B, ctx.cpu),
    |ctx| add_a_r8(Register8::C, ctx.cpu),
    |ctx| add_a_r8(Register8::D, ctx.cpu),
    |ctx| add_a_r8(Register8::E, ctx.cpu),
    |ctx| add_a_r8(Register8::H, ctx.cpu),
    |ctx| add_a_r8(Register8::L, ctx.cpu),
    |ctx| add_a_immed_hl(ctx.cpu, ctx.memory),
    |ctx| add_a_r8(Register8::A, ctx.cpu),
    |ctx| adc_a_r8(Register8::B, ctx.cpu),
    |ctx| adc_a_r8(Register8::C, ctx.cpu),
    |ctx| adc_a_r8(Register8::D, ctx.cpu),
    |ctx| adc_a_r8(Register8::E, ctx.cpu),
    |ctx| adc_a_r8(Register8::H, ctx.cpu),
    |ctx| adc_a_r8(Register8::L, ctx.cpu),
    |ctx| adc_a_immed_hl(ctx.cpu, ctx.memory),
    |ctx| adc_a_r8(Register8::A, ctx.cpu),
    // row 10
    |ctx| sub_a_r8(Register8::B, ctx.cpu),
    |ctx| sub_a_r8(Register8::C, ctx.cpu),
    |ctx| sub_a_r8(Register8::D, ctx.cpu),
    |ctx| sub_a_r8(Register8::E, ctx.cpu),
    |ctx| sub_a_r8(Register8::H, ctx.cpu),
    |ctx| sub_a_r8(Register8::L, ctx.cpu),
    |ctx| sub_a_immed_hl(ctx.cpu, ctx.memory),
    |ctx| sub_a_r8(Register8::A, ctx.cpu),
    |ctx| sbc_a_r8(Register8::B, ctx.cpu),
    |ctx| sbc_a_r8(Register8::C, ctx.cpu),
    |ctx| sbc_a_r8(Register8::D, ctx.cpu),
    |ctx| sbc_a_r8(Register8::E, ctx.cpu),
    |ctx| sbc_a_r8(Register8::H, ctx.cpu),
    |ctx| sbc_a_r8(Register8::L, ctx.cpu),
    |ctx| sbc_a_immed_hl(ctx.cpu, ctx.memory),
    |ctx| sbc_a_r8(Register8::A, ctx.cpu),
    // row 11
    |ctx| and_a_r8(Register8::B, ctx.cpu),
    |ctx| and_a_r8(Register8::C, ctx.cpu),
    |ctx| and_a_r8(Register8::D, ctx.cpu),
    |ctx| and_a_r8(Register8::E, ctx.cpu),
    |ctx| and_a_r8(Register8::H, ctx.cpu),
    |ctx| and_a_r8(Register8::L, ctx.cpu),
    |ctx| and_a_immed_hl(ctx.cpu, ctx.memory),
    |ctx| and_a_r8(Register8::A, ctx.cpu),
    |ctx| xor_a_r8(Register8::B, ctx.cpu),
    |ctx| xor_a_r8(Register8::C, ctx.cpu),
    |ctx| xor_a_r8(Register8::D, ctx.cpu),
    |ctx| xor_a_r8(Register8::E, ctx.cpu),
    |ctx| xor_a_r8(Register8::H, ctx.cpu),
    |ctx| xor_a_r8(Register8::L, ctx.cpu),
    |ctx| xor_a_immed_hl(ctx.cpu, ctx.memory),
    |ctx| xor_a_r8(Register8::A, ctx.cpu),
    // row 12
    |ctx| or_a_r8(Register8::B, ctx.cpu),
    |ctx| or_a_r8(Register8::C, ctx.cpu),
    |ctx| or_a_r8(Register8::D, ctx.cpu),
    |ctx| or_a_r8(Register8::E, ctx.cpu),
    |ctx| or_a_r8(Register8::H, ctx.cpu),
    |ctx| or_a_r8(Register8::L, ctx.cpu),
    |ctx| or_a_hl(ctx.cpu, ctx.memory),
    |ctx| or_a_r8(Register8::A, ctx.cpu),
    |ctx| cp_a_r8(Register8::B, ctx.cpu),
    |ctx| cp_a_r8(Register8::C, ctx.cpu),
    |ctx| cp_a_r8(Register8::D, ctx.cpu),
    |ctx| cp_a_r8(Register8::E, ctx.cpu),
    |ctx| cp_a_r8(Register8::H, ctx.cpu),
    |ctx| cp_a_r8(Register8::L, ctx.cpu),
    |ctx| cp_a_hl(ctx.cpu, ctx.memory),
    |ctx| cp_a_r8(Register8::A, ctx.cpu),
    // row 13
    |ctx| ret_cc(Condition::NotZero, ctx.cpu),
    |ctx| pop_r16(Register16::BC, ctx.cpu),
    |ctx| jp_cc_n16(get_u16(ctx.iter)?, Condition::NotZero, ctx.cpu),
    |ctx| jp_n16(get_u16(ctx.iter)?, ctx.cpu),
    |ctx| call_cc_n16(get_u16(ctx.iter)?, Condition::NotZero, ctx.cpu),
    |ctx| push_r16(Register16::BC, ctx.cpu),
    |ctx| add_a_n8(get_u8(ctx.iter)?, ctx.cpu),
    |ctx| rst(0x00, ctx.cpu), // TODO: fix this
    |ctx| ret_cc(Condition::Zero, ctx.cpu),
    |ctx| ret(ctx.cpu),
    |ctx| jp_cc_n16(get_u16(ctx.iter)?, Condition::Zero, ctx.cpu),
    |ctx| PREFIX_TABLE[*ctx.iter.next().unwrap() as usize](ctx),
    |ctx| call_cc_n16(get_u16(ctx.iter)?, Condition::Zero, ctx.cpu),
    |ctx| call_n16(get_u16(ctx.iter)?, ctx.cpu),
    |ctx| adc_a_n8(get_u8(ctx.iter)?, ctx.cpu),
    |ctx| rst(0x08, ctx.cpu),
    // row 14
    |ctx| ret_cc(Condition::NotCarry, ctx.cpu),
    |ctx| pop_r16(Register16::DE, ctx.cpu),
    |ctx| jp_cc_n16(get_u16(ctx.iter)?, Condition::NotCarry, ctx.cpu),
    |_| Err(DecodeError::InvalidOpcodeByte(0xd3)),
    |ctx| call_cc_n16(get_u16(ctx.iter)?, Condition::NotCarry, ctx.cpu),
    |ctx| push_r16(Register16::DE, ctx.cpu),
    |ctx| sub_a_n8(get_u8(ctx.iter)?, ctx.cpu),
    |ctx| rst(0x10, ctx.cpu),
    |ctx| ret_cc(Condition::Carry, ctx.cpu),
    |ctx| reti(ctx.cpu),
    |ctx| jp_cc_n16(get_u16(ctx.iter)?, Condition::Carry, ctx.cpu),
    |_| Err(DecodeError::InvalidOpcodeByte(0xdb)),
    |ctx| call_cc_n16(get_u16(ctx.iter)?, Condition::Carry, ctx.cpu),
    |_| Err(DecodeError::InvalidOpcodeByte(0xdd)),
    |ctx| sbc_a_n8(get_u8(ctx.iter)?, ctx.cpu),
    |ctx| rst(0x18, ctx.cpu),
    // row 15
    |ctx| loadh_a_immed_n16(get_u16(ctx.iter)?, ctx.cpu, ctx.memory),
    |ctx| pop_r16(Register16::DE, ctx.cpu),
    |ctx| loadh_a_c(ctx.cpu, ctx.memory),
    |_| Err(DecodeError::InvalidOpcodeByte(0xe3)),
    |_| Err(DecodeError::InvalidOpcodeByte(0xe4)),
    |ctx| push_r16(Register16::HL, ctx.cpu),
    |ctx| and_a_n8(get_u8(ctx.iter)?, ctx.cpu),
    |ctx| rst(0x20, ctx.cpu), // TODO: fix this
    |ctx| add_sp_e8(get_u8(ctx.iter)?, ctx.cpu),
    |ctx| jp_hl(ctx.cpu, ctx.memory),
    |ctx| load_a_immed_n16(get_u16(ctx.iter)?, ctx.cpu, ctx.memory),
    |_| Err(DecodeError::InvalidOpcodeByte(0xeb)),
    |_| Err(DecodeError::InvalidOpcodeByte(0xec)),
    |_| Err(DecodeError::InvalidOpcodeByte(0xed)),
    |ctx| xor_a_n8(get_u8(ctx.iter)?, ctx.cpu),
    |ctx| rst(0x28, ctx.cpu),
    // row 16
    |ctx| loadh_immed_n16_a(get_u16(ctx.iter)?, ctx.cpu, ctx.memory),
    |ctx| pop_af(ctx.cpu),
    |ctx| loadh_c_a(ctx.cpu, ctx.memory),
    |ctx| di(ctx.cpu),
    |_| Err(DecodeError::InvalidOpcodeByte(0xf4)),
    |ctx| push_af(ctx.cpu),
    |ctx| or_a_n8(get_u8(ctx.iter)?, ctx.cpu),
    |ctx| rst(0x30, ctx.cpu), // TODO: fix this
    |ctx| load_hl_sp_e8(get_i8(ctx.iter)?, ctx.cpu),
    |ctx| load_sp_hl(ctx.cpu),
    |ctx| load_immed_n16_a(get_u16(ctx.iter)?, ctx.cpu, ctx.memory),
    |ctx| ei(ctx.cpu),
    |_| Err(DecodeError::InvalidOpcodeByte(0xfc)),
    |_| Err(DecodeError::InvalidOpcodeByte(0xfd)),
    |ctx| cp_a_n8(get_u8(ctx.iter)?, ctx.cpu),
    |ctx| rst(0x38, ctx.cpu),
];

/// Prefixed ($CB $xx)
/// https://gbdev.io/gb-opcodes/optables/#prefixed
pub const PREFIX_TABLE: [InstructionFn; 256] = [
    // row 1
    |ctx| rlc_r8(Register8::B, ctx.cpu),
    |ctx| rlc_r8(Register8::C, ctx.cpu),
    |ctx| rlc_r8(Register8::D, ctx.cpu),
    |ctx| rlc_r8(Register8::E, ctx.cpu),
    |ctx| rlc_r8(Register8::H, ctx.cpu),
    |ctx| rlc_r8(Register8::L, ctx.cpu),
    |ctx| rlc_hl(ctx.cpu, ctx.memory),
    |ctx| rlc_r8(Register8::A, ctx.cpu),
    |ctx| rrc_r8(Register8::B, ctx.cpu),
    |ctx| rrc_r8(Register8::C, ctx.cpu),
    |ctx| rrc_r8(Register8::D, ctx.cpu),
    |ctx| rrc_r8(Register8::E, ctx.cpu),
    |ctx| rrc_r8(Register8::H, ctx.cpu),
    |ctx| rrc_r8(Register8::L, ctx.cpu),
    |ctx| rrc_hl(ctx.cpu, ctx.memory),
    |ctx| rrc_r8(Register8::A, ctx.cpu),
    // row 2
    |ctx| rl_r8(Register8::B, ctx.cpu),
    |ctx| rl_r8(Register8::C, ctx.cpu),
    |ctx| rl_r8(Register8::D, ctx.cpu),
    |ctx| rl_r8(Register8::E, ctx.cpu),
    |ctx| rl_r8(Register8::H, ctx.cpu),
    |ctx| rl_r8(Register8::L, ctx.cpu),
    |ctx| rl_hl(ctx.cpu, ctx.memory),
    |ctx| rl_r8(Register8::A, ctx.cpu),
    |ctx| rr_r8(Register8::B, ctx.cpu),
    |ctx| rr_r8(Register8::C, ctx.cpu),
    |ctx| rr_r8(Register8::D, ctx.cpu),
    |ctx| rr_r8(Register8::E, ctx.cpu),
    |ctx| rr_r8(Register8::H, ctx.cpu),
    |ctx| rr_r8(Register8::L, ctx.cpu),
    |ctx| rr_hl(ctx.cpu, ctx.memory),
    |ctx| rr_r8(Register8::A, ctx.cpu),
    // row 3
    |ctx| sla_r8(Register8::B, ctx.cpu),
    |ctx| sla_r8(Register8::C, ctx.cpu),
    |ctx| sla_r8(Register8::D, ctx.cpu),
    |ctx| sla_r8(Register8::E, ctx.cpu),
    |ctx| sla_r8(Register8::H, ctx.cpu),
    |ctx| sla_r8(Register8::L, ctx.cpu),
    |ctx| sla_hl(ctx.cpu, ctx.memory),
    |ctx| sla_r8(Register8::A, ctx.cpu),
    |ctx| sra_r8(Register8::B, ctx.cpu),
    |ctx| sra_r8(Register8::C, ctx.cpu),
    |ctx| sra_r8(Register8::D, ctx.cpu),
    |ctx| sra_r8(Register8::E, ctx.cpu),
    |ctx| sra_r8(Register8::H, ctx.cpu),
    |ctx| sra_r8(Register8::L, ctx.cpu),
    |ctx| sra_hl(ctx.cpu, ctx.memory),
    |ctx| sra_r8(Register8::A, ctx.cpu),
    // row 4
    |ctx| swap_r8(Register8::B, ctx.cpu),
    |ctx| swap_r8(Register8::C, ctx.cpu),
    |ctx| swap_r8(Register8::D, ctx.cpu),
    |ctx| swap_r8(Register8::E, ctx.cpu),
    |ctx| swap_r8(Register8::H, ctx.cpu),
    |ctx| swap_r8(Register8::L, ctx.cpu),
    |ctx| swap_hl(ctx.cpu, ctx.memory),
    |ctx| swap_r8(Register8::A, ctx.cpu),
    |ctx| srl_r8(Register8::B, ctx.cpu),
    |ctx| srl_r8(Register8::C, ctx.cpu),
    |ctx| srl_r8(Register8::D, ctx.cpu),
    |ctx| srl_r8(Register8::E, ctx.cpu),
    |ctx| srl_r8(Register8::H, ctx.cpu),
    |ctx| srl_r8(Register8::L, ctx.cpu),
    |ctx| srl_hl(ctx.cpu, ctx.memory),
    |ctx| srl_r8(Register8::A, ctx.cpu),
    // row 5
    |ctx| bit_u3_r8(0, Register8::B, ctx.cpu),
    |ctx| bit_u3_r8(0, Register8::C, ctx.cpu),
    |ctx| bit_u3_r8(0, Register8::D, ctx.cpu),
    |ctx| bit_u3_r8(0, Register8::E, ctx.cpu),
    |ctx| bit_u3_r8(0, Register8::H, ctx.cpu),
    |ctx| bit_u3_r8(0, Register8::L, ctx.cpu),
    |ctx| bit_u3_hl(0, ctx.cpu, ctx.memory),
    |ctx| bit_u3_r8(0, Register8::A, ctx.cpu),
    |ctx| bit_u3_r8(1, Register8::B, ctx.cpu),
    |ctx| bit_u3_r8(1, Register8::C, ctx.cpu),
    |ctx| bit_u3_r8(1, Register8::D, ctx.cpu),
    |ctx| bit_u3_r8(1, Register8::E, ctx.cpu),
    |ctx| bit_u3_r8(1, Register8::H, ctx.cpu),
    |ctx| bit_u3_r8(1, Register8::L, ctx.cpu),
    |ctx| bit_u3_hl(1, ctx.cpu, ctx.memory),
    |ctx| bit_u3_r8(1, Register8::A, ctx.cpu),
    // row 6
    |ctx| bit_u3_r8(2, Register8::B, ctx.cpu),
    |ctx| bit_u3_r8(2, Register8::C, ctx.cpu),
    |ctx| bit_u3_r8(2, Register8::D, ctx.cpu),
    |ctx| bit_u3_r8(2, Register8::E, ctx.cpu),
    |ctx| bit_u3_r8(2, Register8::H, ctx.cpu),
    |ctx| bit_u3_r8(2, Register8::L, ctx.cpu),
    |ctx| bit_u3_hl(2, ctx.cpu, ctx.memory),
    |ctx| bit_u3_r8(2, Register8::A, ctx.cpu),
    |ctx| bit_u3_r8(3, Register8::B, ctx.cpu),
    |ctx| bit_u3_r8(3, Register8::C, ctx.cpu),
    |ctx| bit_u3_r8(3, Register8::D, ctx.cpu),
    |ctx| bit_u3_r8(3, Register8::E, ctx.cpu),
    |ctx| bit_u3_r8(3, Register8::H, ctx.cpu),
    |ctx| bit_u3_r8(3, Register8::L, ctx.cpu),
    |ctx| bit_u3_hl(3, ctx.cpu, ctx.memory),
    |ctx| bit_u3_r8(3, Register8::A, ctx.cpu),
    // row 7
    |ctx| bit_u3_r8(4, Register8::B, ctx.cpu),
    |ctx| bit_u3_r8(4, Register8::C, ctx.cpu),
    |ctx| bit_u3_r8(4, Register8::D, ctx.cpu),
    |ctx| bit_u3_r8(4, Register8::E, ctx.cpu),
    |ctx| bit_u3_r8(4, Register8::H, ctx.cpu),
    |ctx| bit_u3_r8(4, Register8::L, ctx.cpu),
    |ctx| bit_u3_hl(4, ctx.cpu, ctx.memory),
    |ctx| bit_u3_r8(4, Register8::A, ctx.cpu),
    |ctx| bit_u3_r8(5, Register8::B, ctx.cpu),
    |ctx| bit_u3_r8(5, Register8::C, ctx.cpu),
    |ctx| bit_u3_r8(5, Register8::D, ctx.cpu),
    |ctx| bit_u3_r8(5, Register8::E, ctx.cpu),
    |ctx| bit_u3_r8(5, Register8::H, ctx.cpu),
    |ctx| bit_u3_r8(5, Register8::L, ctx.cpu),
    |ctx| bit_u3_hl(5, ctx.cpu, ctx.memory),
    |ctx| bit_u3_r8(5, Register8::A, ctx.cpu),
    // row 8
    |ctx| bit_u3_r8(6, Register8::B, ctx.cpu),
    |ctx| bit_u3_r8(6, Register8::C, ctx.cpu),
    |ctx| bit_u3_r8(6, Register8::D, ctx.cpu),
    |ctx| bit_u3_r8(6, Register8::E, ctx.cpu),
    |ctx| bit_u3_r8(6, Register8::H, ctx.cpu),
    |ctx| bit_u3_r8(6, Register8::L, ctx.cpu),
    |ctx| bit_u3_hl(6, ctx.cpu, ctx.memory),
    |ctx| bit_u3_r8(6, Register8::A, ctx.cpu),
    |ctx| bit_u3_r8(7, Register8::B, ctx.cpu),
    |ctx| bit_u3_r8(7, Register8::C, ctx.cpu),
    |ctx| bit_u3_r8(7, Register8::D, ctx.cpu),
    |ctx| bit_u3_r8(7, Register8::E, ctx.cpu),
    |ctx| bit_u3_r8(7, Register8::H, ctx.cpu),
    |ctx| bit_u3_r8(7, Register8::L, ctx.cpu),
    |ctx| bit_u3_hl(7, ctx.cpu, ctx.memory),
    |ctx| bit_u3_r8(7, Register8::A, ctx.cpu),
    // row 9
    |ctx| res_u3_r8(0, Register8::B, ctx.cpu),
    |ctx| res_u3_r8(0, Register8::C, ctx.cpu),
    |ctx| res_u3_r8(0, Register8::D, ctx.cpu),
    |ctx| res_u3_r8(0, Register8::E, ctx.cpu),
    |ctx| res_u3_r8(0, Register8::H, ctx.cpu),
    |ctx| res_u3_r8(0, Register8::L, ctx.cpu),
    |ctx| res_u3_hl(0, ctx.cpu, ctx.memory),
    |ctx| res_u3_r8(0, Register8::A, ctx.cpu),
    |ctx| res_u3_r8(1, Register8::B, ctx.cpu),
    |ctx| res_u3_r8(1, Register8::C, ctx.cpu),
    |ctx| res_u3_r8(1, Register8::D, ctx.cpu),
    |ctx| res_u3_r8(1, Register8::E, ctx.cpu),
    |ctx| res_u3_r8(1, Register8::H, ctx.cpu),
    |ctx| res_u3_r8(1, Register8::L, ctx.cpu),
    |ctx| res_u3_hl(1, ctx.cpu, ctx.memory),
    |ctx| res_u3_r8(1, Register8::A, ctx.cpu),
    // row 10
    |ctx| res_u3_r8(2, Register8::B, ctx.cpu),
    |ctx| res_u3_r8(2, Register8::C, ctx.cpu),
    |ctx| res_u3_r8(2, Register8::D, ctx.cpu),
    |ctx| res_u3_r8(2, Register8::E, ctx.cpu),
    |ctx| res_u3_r8(2, Register8::H, ctx.cpu),
    |ctx| res_u3_r8(2, Register8::L, ctx.cpu),
    |ctx| res_u3_hl(2, ctx.cpu, ctx.memory),
    |ctx| res_u3_r8(2, Register8::A, ctx.cpu),
    |ctx| res_u3_r8(3, Register8::B, ctx.cpu),
    |ctx| res_u3_r8(3, Register8::C, ctx.cpu),
    |ctx| res_u3_r8(3, Register8::D, ctx.cpu),
    |ctx| res_u3_r8(3, Register8::E, ctx.cpu),
    |ctx| res_u3_r8(3, Register8::H, ctx.cpu),
    |ctx| res_u3_r8(3, Register8::L, ctx.cpu),
    |ctx| res_u3_hl(3, ctx.cpu, ctx.memory),
    |ctx| res_u3_r8(3, Register8::A, ctx.cpu),
    // row 11
    |ctx| res_u3_r8(4, Register8::B, ctx.cpu),
    |ctx| res_u3_r8(4, Register8::C, ctx.cpu),
    |ctx| res_u3_r8(4, Register8::D, ctx.cpu),
    |ctx| res_u3_r8(4, Register8::E, ctx.cpu),
    |ctx| res_u3_r8(4, Register8::H, ctx.cpu),
    |ctx| res_u3_r8(4, Register8::L, ctx.cpu),
    |ctx| res_u3_hl(4, ctx.cpu, ctx.memory),
    |ctx| res_u3_r8(4, Register8::A, ctx.cpu),
    |ctx| res_u3_r8(5, Register8::B, ctx.cpu),
    |ctx| res_u3_r8(5, Register8::C, ctx.cpu),
    |ctx| res_u3_r8(5, Register8::D, ctx.cpu),
    |ctx| res_u3_r8(5, Register8::E, ctx.cpu),
    |ctx| res_u3_r8(5, Register8::H, ctx.cpu),
    |ctx| res_u3_r8(5, Register8::L, ctx.cpu),
    |ctx| res_u3_hl(5, ctx.cpu, ctx.memory),
    |ctx| res_u3_r8(5, Register8::A, ctx.cpu),
    // row 12
    |ctx| res_u3_r8(6, Register8::B, ctx.cpu),
    |ctx| res_u3_r8(6, Register8::C, ctx.cpu),
    |ctx| res_u3_r8(6, Register8::D, ctx.cpu),
    |ctx| res_u3_r8(6, Register8::E, ctx.cpu),
    |ctx| res_u3_r8(6, Register8::H, ctx.cpu),
    |ctx| res_u3_r8(6, Register8::L, ctx.cpu),
    |ctx| res_u3_hl(6, ctx.cpu, ctx.memory),
    |ctx| res_u3_r8(6, Register8::A, ctx.cpu),
    |ctx| res_u3_r8(7, Register8::B, ctx.cpu),
    |ctx| res_u3_r8(7, Register8::C, ctx.cpu),
    |ctx| res_u3_r8(7, Register8::D, ctx.cpu),
    |ctx| res_u3_r8(7, Register8::E, ctx.cpu),
    |ctx| res_u3_r8(7, Register8::H, ctx.cpu),
    |ctx| res_u3_r8(7, Register8::L, ctx.cpu),
    |ctx| res_u3_hl(7, ctx.cpu, ctx.memory),
    |ctx| res_u3_r8(7, Register8::A, ctx.cpu),
    // row 13
    |ctx| set_u3_r8(0, Register8::B, ctx.cpu),
    |ctx| set_u3_r8(0, Register8::C, ctx.cpu),
    |ctx| set_u3_r8(0, Register8::D, ctx.cpu),
    |ctx| set_u3_r8(0, Register8::E, ctx.cpu),
    |ctx| set_u3_r8(0, Register8::H, ctx.cpu),
    |ctx| set_u3_r8(0, Register8::L, ctx.cpu),
    |ctx| set_u3_hl(0, ctx.cpu, ctx.memory),
    |ctx| set_u3_r8(0, Register8::A, ctx.cpu),
    |ctx| set_u3_r8(1, Register8::B, ctx.cpu),
    |ctx| set_u3_r8(1, Register8::C, ctx.cpu),
    |ctx| set_u3_r8(1, Register8::D, ctx.cpu),
    |ctx| set_u3_r8(1, Register8::E, ctx.cpu),
    |ctx| set_u3_r8(1, Register8::H, ctx.cpu),
    |ctx| set_u3_r8(1, Register8::L, ctx.cpu),
    |ctx| set_u3_hl(1, ctx.cpu, ctx.memory),
    |ctx| set_u3_r8(1, Register8::A, ctx.cpu),
    // row 14
    |ctx| set_u3_r8(2, Register8::B, ctx.cpu),
    |ctx| set_u3_r8(2, Register8::C, ctx.cpu),
    |ctx| set_u3_r8(2, Register8::D, ctx.cpu),
    |ctx| set_u3_r8(2, Register8::E, ctx.cpu),
    |ctx| set_u3_r8(2, Register8::H, ctx.cpu),
    |ctx| set_u3_r8(2, Register8::L, ctx.cpu),
    |ctx| set_u3_hl(2, ctx.cpu, ctx.memory),
    |ctx| set_u3_r8(2, Register8::A, ctx.cpu),
    |ctx| set_u3_r8(3, Register8::B, ctx.cpu),
    |ctx| set_u3_r8(3, Register8::C, ctx.cpu),
    |ctx| set_u3_r8(3, Register8::D, ctx.cpu),
    |ctx| set_u3_r8(3, Register8::E, ctx.cpu),
    |ctx| set_u3_r8(3, Register8::H, ctx.cpu),
    |ctx| set_u3_r8(3, Register8::L, ctx.cpu),
    |ctx| set_u3_hl(3, ctx.cpu, ctx.memory),
    |ctx| set_u3_r8(3, Register8::A, ctx.cpu),
    // row 15
    |ctx| set_u3_r8(4, Register8::B, ctx.cpu),
    |ctx| set_u3_r8(4, Register8::C, ctx.cpu),
    |ctx| set_u3_r8(4, Register8::D, ctx.cpu),
    |ctx| set_u3_r8(4, Register8::E, ctx.cpu),
    |ctx| set_u3_r8(4, Register8::H, ctx.cpu),
    |ctx| set_u3_r8(4, Register8::L, ctx.cpu),
    |ctx| set_u3_hl(4, ctx.cpu, ctx.memory),
    |ctx| set_u3_r8(4, Register8::A, ctx.cpu),
    |ctx| set_u3_r8(5, Register8::B, ctx.cpu),
    |ctx| set_u3_r8(5, Register8::C, ctx.cpu),
    |ctx| set_u3_r8(5, Register8::D, ctx.cpu),
    |ctx| set_u3_r8(5, Register8::E, ctx.cpu),
    |ctx| set_u3_r8(5, Register8::H, ctx.cpu),
    |ctx| set_u3_r8(5, Register8::L, ctx.cpu),
    |ctx| set_u3_hl(5, ctx.cpu, ctx.memory),
    |ctx| set_u3_r8(5, Register8::A, ctx.cpu),
    // row 16
    |ctx| set_u3_r8(6, Register8::B, ctx.cpu),
    |ctx| set_u3_r8(6, Register8::C, ctx.cpu),
    |ctx| set_u3_r8(6, Register8::D, ctx.cpu),
    |ctx| set_u3_r8(6, Register8::E, ctx.cpu),
    |ctx| set_u3_r8(6, Register8::H, ctx.cpu),
    |ctx| set_u3_r8(6, Register8::L, ctx.cpu),
    |ctx| set_u3_hl(6, ctx.cpu, ctx.memory),
    |ctx| set_u3_r8(6, Register8::A, ctx.cpu),
    |ctx| set_u3_r8(7, Register8::B, ctx.cpu),
    |ctx| set_u3_r8(7, Register8::C, ctx.cpu),
    |ctx| set_u3_r8(7, Register8::D, ctx.cpu),
    |ctx| set_u3_r8(7, Register8::E, ctx.cpu),
    |ctx| set_u3_r8(7, Register8::H, ctx.cpu),
    |ctx| set_u3_r8(7, Register8::L, ctx.cpu),
    |ctx| set_u3_hl(7, ctx.cpu, ctx.memory),
    |ctx| set_u3_r8(7, Register8::A, ctx.cpu),
];
